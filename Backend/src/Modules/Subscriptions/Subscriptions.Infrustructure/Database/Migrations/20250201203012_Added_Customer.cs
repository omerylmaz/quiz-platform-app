//<auto-generated>
using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace Subscriptions.Infrustructure.Database.Migrations
{
    /// <inheritdoc />
    public partial class Added_Customer : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "user_subscriptions",
                schema: "subscriptions");

            migrationBuilder.RenameColumn(
                name: "user_id",
                schema: "subscriptions",
                table: "payments",
                newName: "customer_id");

            migrationBuilder.CreateTable(
                name: "customers",
                schema: "subscriptions",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    email = table.Column<string>(type: "character varying(300)", maxLength: 300, nullable: false),
                    first_name = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false),
                    last_name = table.Column<string>(type: "character varying(200)", maxLength: 200, nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_customers", x => x.id);
                });

            migrationBuilder.CreateTable(
                name: "customer_subscriptions",
                schema: "subscriptions",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    customer_id = table.Column<Guid>(type: "uuid", nullable: false),
                    subscription_id = table.Column<Guid>(type: "uuid", nullable: false),
                    start_date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    end_date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    is_active = table.Column<bool>(type: "boolean", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_customer_subscriptions", x => x.id);
                    table.ForeignKey(
                        name: "fk_customer_subscriptions_customers_customer_id",
                        column: x => x.customer_id,
                        principalSchema: "subscriptions",
                        principalTable: "customers",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "fk_customer_subscriptions_subscriptions_subscription_id",
                        column: x => x.subscription_id,
                        principalSchema: "subscriptions",
                        principalTable: "subscriptions",
                        principalColumn: "id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateIndex(
                name: "ix_payments_customer_id",
                schema: "subscriptions",
                table: "payments",
                column: "customer_id");

            migrationBuilder.CreateIndex(
                name: "ix_customer_subscriptions_customer_id",
                schema: "subscriptions",
                table: "customer_subscriptions",
                column: "customer_id");

            migrationBuilder.CreateIndex(
                name: "ix_customer_subscriptions_subscription_id",
                schema: "subscriptions",
                table: "customer_subscriptions",
                column: "subscription_id");

            migrationBuilder.CreateIndex(
                name: "ix_customers_email",
                schema: "subscriptions",
                table: "customers",
                column: "email",
                unique: true);

            migrationBuilder.AddForeignKey(
                name: "fk_payments_customers_customer_id",
                schema: "subscriptions",
                table: "payments",
                column: "customer_id",
                principalSchema: "subscriptions",
                principalTable: "customers",
                principalColumn: "id",
                onDelete: ReferentialAction.Cascade);
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropForeignKey(
                name: "fk_payments_customers_customer_id",
                schema: "subscriptions",
                table: "payments");

            migrationBuilder.DropTable(
                name: "customer_subscriptions",
                schema: "subscriptions");

            migrationBuilder.DropTable(
                name: "customers",
                schema: "subscriptions");

            migrationBuilder.DropIndex(
                name: "ix_payments_customer_id",
                schema: "subscriptions",
                table: "payments");

            migrationBuilder.RenameColumn(
                name: "customer_id",
                schema: "subscriptions",
                table: "payments",
                newName: "user_id");

            migrationBuilder.CreateTable(
                name: "user_subscriptions",
                schema: "subscriptions",
                columns: table => new
                {
                    id = table.Column<Guid>(type: "uuid", nullable: false),
                    end_date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    is_active = table.Column<bool>(type: "boolean", nullable: false),
                    start_date = table.Column<DateTime>(type: "timestamp with time zone", nullable: false),
                    subscription_id = table.Column<Guid>(type: "uuid", nullable: false),
                    user_id = table.Column<Guid>(type: "uuid", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("pk_user_subscriptions", x => x.id);
                });
        }
    }
}
